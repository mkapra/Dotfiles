let mapleader = "Ã¤"

" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif

call plug#begin()
if !has('nvim')
  Plug 'ctrlpvim/ctrlp.vim'             " file finder
  Plug 'jiangmiao/auto-pairs'			" Automatic brackets
endif

" Appearance
Plug 'rose-pine/vim'                    " Colorscheme

"" Airline for normal vim and tmuxline
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" General plugins for (n)vim
Plug 'tpope/vim-commentary'              " commenting
Plug 'tpope/vim-sleuth'                  " heuristic file indendation
call plug#end()

" ============================== Colors
if has('termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

if filereadable(expand("$HOME") . "/.darkmode")
    set background=dark
    colorscheme rosepine_moon
else
    set background=light
    colorscheme rosepine_dawn
endif

syntax on
set termguicolors

" ============================== General
filetype indent plugin on
set number
set relativenumber
set cursorline
set ruler
set colorcolumn=80
set nowrap

set showmatch
set hidden
set noswapfile
set confirm
set noshowmode
set noshowcmd
set encoding=utf-8
set mouse=a			        " a=on, c=off
set undolevels=1337
set backspace=indent,eol,start
set wildmenu
set scrolloff=5

let g:ctrlp_show_hidden = 1  " show hidden files in ctrlp menus

set wildignore+=*/target/*,*docx*,*pdf* " Hide some files in e.g. :e
:highlight ExtraWhitespace ctermbg=red guibg=red
:match ExtraWhitespace /\s\+$/

" ============================== Search
set incsearch
set ignorecase
set smartcase
set hlsearch
set mat=5

" ============================== Cursor Thiccness
let &t_SI = "\<Esc>[6 q"
let &t_SR = "\<Esc>[4 q"
let &t_EI = "\<Esc>[2 q"

" ============================== Statusline
set laststatus=3
set showtabline=2
let g:airline_powerline_fonts = 1

" ============================== Shortcuts
nnoremap <leader>n  <cmd>noh<cr>    " Reset highlighting
