# ============================== General
# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# Source other configurations
[ -f ~/.generic_shrc ] && source ~/.generic_shrc
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# History
shopt -s histappend
HISTSIZE=1000
HISTCONTROL=ignoreboth
HISTFILESIZE=2000

# ============================== Shortcuts
set -o vi
# Bind C-f to the fg command to be able to bring a background command to the
# foreground faster
bind -x '"\C-f":"fg"'
bind '"\C-n":yank-last-arg'
bind '"\C-a":beginning-of-line'
bind '"\C-e":end-of-line'
bind '"\C-l": clear-screen'

# ============================== Functions
parse_git_dir() {
  if $(git rev-parse --git-dir > /dev/null 2>&1)
  then
    local branch_name=$(git branch|grep "^\*"|cut -d ' ' -f2)
    if [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working tree clean" ]]
    then
      branch_name+='*'
    fi
    echo "($branch_name) "
  fi
}

# ============================== Appereance & Completion
# Get different PS1's for different exit codes
PROMPT_COMMAND=__prompt_command
__prompt_command() {
  exit_code=$?
  is_root=id | grep root &> /dev/null

  if [ $? -eq 0 ]
  then
    PS1='\[\e[31m\]\h\[\e[0m\] \w '
  else
    PS1='\[\e[33m\]\h\[\e[0m\] \w '
  fi
  PS1+='\[\033[0;36m\]$(parse_git_dir)\[\033[00m\]'

  local red_lambda='\[\e[0;31m\]λ\[\e[0m\] '
  local green_lambda='\[\e[0;32m\]λ\[\e[0m\] '

  if [ $exit_code -ne 0 ]
  then
    PS1+=$red_lambda
  else
    PS1+=$green_lambda
  fi
}

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

[ -f ~/.local_shrc ] && source ~/.local_shrc # Source local settings
