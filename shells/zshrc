# ============================== General
# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# Source other configurations
[ -f ~/.shellrc.generic ] && source ~/.shellrc.generic

if which zoxide &> /dev/null
then
  eval "$(zoxide init zsh)"
fi

# ============================== Prompt
autoload -Uz vcs_info
autoload -U colors && colors
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst

ICON="%(?.%{$fg[green]%}.%{$fg[red]%})λ"
DIR="%{$fg[blue]%}%~"
GIT="%{$fg[red]%}\$vcs_info_msg_0_"
id | grep root &> /dev/null
if [ $? -eq 0 ]
then
    HOSTN="%{$fg[red]%}%m "
else
    HOSTN="%{$fg[yellow]%}%m "
fi

export PROMPT="${HOSTN}${DIR}${GIT} ${BREAK}${ICON}%{$reset_color%} "
zstyle ':vcs_info:git:*' formats ' (%b )'

# show info in bar
case $TERM in
  (*xterm* | rxvt | alacritty)
    # This is seen when the shell prompts for input.
    function precmd {
      print -Pn "\e]0;%m: %(1j,%j job%(2j|s|) - ,)%~\a"
    }
    # This is seen while the shell waits for a command to complete.
    function preexec {
      printf "\033]0;$(hostname): %s\a" "$1"
    }
    ;;
esac

# ============================== Aliases
# Read aliases
if [ -e $HOME/.zsh_aliases ]
then
  . $HOME/.zsh_aliases
fi

# ============================== Completion
# unsetopt menu_complete   # do not autoselect the first completion entry
unsetopt flowcontrol
setopt auto_menu         # show completion menu on successive tab press
setopt complete_in_word
setopt always_to_end
zstyle ':completion:*' menu select

fpath=(~/.zsh/functions $fpath)
autoload -Uz compinit 
compinit

# zellij
function zr () { zellij run --name "$*" -- zsh -ic "$*";}
function zrf () { zellij run --name "$*" --floating -- zsh -ic "$*";}
function ze () { zellij edit "$*";}
function zef () { zellij edit --floating "$*";}

# Case Insensitive completion
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# ============================== History
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt share_history          # share command history data inside tmux
export HISTFILE="$HOME/.zsh_history"
export SAVEHIST=5000

[ -f ~/.shellrc.local ] && source ~/.shellrc.local # Source local settings
which starship &> /dev/null && eval "$(starship init zsh)"
